const { default: axios } = require('axios');
const redis = require('redis');
var express = require('express');
var router = express.Router();

// Create S3 bucket name
const AWS = require('aws-sdk');
const bucketName = 'cab432-assign2-mills-tetley';

// Create and connect redis client to local instance.
const redisClient = redis.createClient();

// Print redis errors to the console
redisClient.on('error', (err) => {
  console.log("Error " + err);
});

/* GET home page. */
router.get('/', function(req, res, next) {
  res.render('index', { title: 'Twitter Analyser' });
});

/* GET search page. */
router.get('/search/', function(req, res, next) {
  console.log(req.query.topic);
  const topic = req.query.topic;

  const redisKey = `twitter:${topic}`;

  // Try the cache
  return redisClient.get(redisKey, (err, result) => {
  
    // If that key exist in Redis store
    if (result) {
      const resultJSON = JSON.parse(result);
      console.log("Served from Redis");
      res.render('index', { title: 'Twitter Analyser', topic : JSON.stringify(resultJSON) });
      
    } else { // Key does not exist in Redis store - serve from S3 and store in cache
      console.log("Key does not exist in redis");

      const s3Key = `twitter-${topic}`;
      // Check S3
      const params = { Bucket: bucketName, Key: s3Key};
          
      return new AWS.S3({apiVersion: '2006-03-01'}).getObject(params, (err, result) => {
        if(result){
          // Serve from S3
          console.log("Served from S3");
          const resultJSON = JSON.parse(result.Body);

          // Save the Twitter API response in Redis store
          redisClient.setex(`twitter:${topic}`, 3600, JSON.stringify({ source: 'Redis Cache', resultJSON, }));

          res.render('index', { title: 'Twitter Analyser', topic : JSON.stringify(resultJSON) });

        } else { // Key does not exist in S3 - get from Twitter API and store in S3 AND Cache
          // Set Bearer Token authorisation and url (code generated by postman)
          var config = {
            method: 'get',
            url: ('http://api.twitter.com/2/tweets/search/recent?query=' + topic + '%20lang%3Aen'),
            headers: { 
              'Authorization': 'Bearer AAAAAAAAAAAAAAAAAAAAABpxUwEAAAAAdDYRJVcOC7COTE47xw1zPLiYSPI%3D5QMpEEW3iHzXaMduYOWW0JNwxw0dj1oo6M3lOEapfn4lHMeeF2'
            }
          };
          // Get response from twitter API
          axios(config)
            .then( (response) => {
              return response.data;
            })
            .then( (rsp) => { 
              console.log("Key does not exist in S3");
              var result = JSON.stringify(rsp);
              redisClient.setex(`twitter:${topic}`, 3600, JSON.stringify({ source: 'Redis Cache', ...rsp, }));
              
              // Store in S3
              // Create a promise on S3 service object
              // Create params for putObject call
              const objectParams = {Bucket: bucketName, Key: s3Key, Body: JSON.stringify({ source: 'S3', ...rsp, })};
              // Create object upload promise
              const uploadPromise = new AWS.S3({apiVersion: '2006-03-01'}).putObject(objectParams).promise();
              uploadPromise.then(function(data) {
                  console.log("Successfully uploaded data to " + bucketName + "/" + s3Key);
              });

              // Render page from twitter API response
              res.render('index', { title: 'Twitter Analyser', topic : result });
            })
            .catch((error) => {
              console.error(error);
            })
        }
      });
    }
  });
});

module.exports = router;
